name: build-containers
on:
  workflow_dispatch: {}
  pull_request: {}
  push:
    branches:
      - main
permissions:
  id-token: write
  contents: read
  packages: write
jobs:
  build-containers:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@3df4ab11eba7bda6032a0b82a6bb43b11571feac # v4.0.0
      - id: run-info
        name: collect job run info
        env:
          KO_DOCKER_REPO: ghcr.io/${{ github.repository }}
        run: |
          echo "ko-docker-repo=${KO_DOCKER_REPO,,}" >> $GITHUB_OUTPUT
          PATHS="$(go list -json ./... | jq -r -s '.[] | select (.Name == "main") | .ImportPath' | xargs)"
          echo "paths="$PATHS"" >> $GITHUB_OUTPUT
      - uses: actions/setup-go@93397bea11091df50f3d7e59dc26a7711a8bcfbe # v4.1.0
        with:
          go-version-file: go.mod
          check-latest: true
          cache-dependency-path: go.sum
      - uses: sigstore/cosign-installer@11086d25041f77fe8fe7b9ea4e48e3b9192b8f19 # v3.1.2
      - uses: ko-build/setup-ko@ace48d793556083a76f1e3e6068850c1f4a369aa # v0.6
      - id: build
        env:
          KO_DOCKER_REPO: ${{ steps.run-info.outputs.ko-docker-repo }}
          IMAGES_PATH: ${{ steps.run-info.outputs.paths }}
        run: |
          IMAGES="$(ko build --base-import-paths $IMAGES_PATH)"
          echo "images=$(echo $IMAGES | tr ' ' ',')" >> $GITHUB_OUTPUT
      - id: sign-images-and-attest-sbom
        env:
          COSIGN_YES: "true"
          IMAGES: ${{ steps.build.outputs.images }}
        run: |
          for IMAGE in $IMAGES; do
            cosign sign $IMAGE -y --recursive
            cosign download sbom $IMAGE > /tmp/sbom-spdx.json
            cosign attest --predicate /tmp/sbom-spdx.json $IMAGE -y --recursive
          done
